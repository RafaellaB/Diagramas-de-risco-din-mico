name: Atualizar Dados de Chuva Automaticamente

# Gatilhos: Quando o robô deve rodar?
on:
  # 1. Em um horário agendado
  schedule:
    # "Aos 15 minutos de cada hora, todos os dias" (ex: 13:15, 14:15, 15:15...)
    - cron: '*/5 * * * *'
  
  # 2. Permite acionar manualmente pela aba "Actions" do GitHub
  workflow_dispatch:

# Define o que o robô vai fazer
jobs:
  build-and-commit:
    runs-on: ubuntu-latest # O robô vai usar uma máquina virtual Linux

    # Disponibiliza os segredos como variáveis de ambiente para o script
    env:
      CEMADEN_EMAIL: ${{ secrets.CEMADEN_EMAIL }}
      CEMADEN_SENHA: ${{ secrets.CEMADEN_SENHA }}

    steps:
      # Passo 1: Baixa o código do seu repositório para a máquina do robô
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Python
      - name: Configurar Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Passo 3: Instala as bibliotecas que o script precisa
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas pytz

      # Passo 4: Executa script Python para buscar e salvar o CSV
      - name: Rodar script de atualização de dados
        run: python atualizar_dados.py

      # Passo 5: Configura o Git e faz o push do novo arquivo CSV para o repositório
      - name: Fazer commit e push das alterações
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          # Só commita se houver alguma mudança no arquivo CSV
          git commit -m "Dados de chuva atualizados automaticamente" || exit 0
          git push